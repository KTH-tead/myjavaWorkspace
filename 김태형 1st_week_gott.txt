챕터 1

1. JDK와 JRE의 차이점을 설명한 것 중 틀린 것은 무엇입니까?
답: 4 // Javac.exe =
* JVM + 자바 표준 API
// String, Scanner

2. JVM에 대한 설명으로 틀린 것은 무엇입니까?
답: 3,4
// 컴파일한 JAVA CLASS 는 운영체제 독립적.

3. 자바 프로그램 개발 과정을 순서대로 나열하세요.
답: 3,1,2,4

4. 자바 소스 파일을 작성할 때 틀린 것은 무엇입니까?
답: 4

5. 자바 주석무의 종류가 아닌 것은 무엇입니까?
답 4 .
//HTML 주석.

6. 이클립스에 대한 설명으로 틀린 것은 무엇입니까?
답: 4
// workspace폴더에 대한 설정이 저장됨
// jre사용 관련 사항 때문에 workspace 새로 만들 때 설정 동일하게 변경해야 함.
//Project/src안에 source파일이 저장.

---------------------------------------------------------------


챕터 2

1. 자바에서 변수에 대한 설명 중 틀린 것은 무엇입니까?
답: 4

2. 변수 이름으로 사용 가능한 것을 모두 선택하세요.
답: 1,4,5
// "$", "_" 주로 api에서 사용함.

3. 다음 표의 빈칸에 자바의 기본 타입 (Primitive Type) 8개를 적어보세요.
답:
1byte : byte (정수타입) , boolean(논리타입)
2byte : char (정수타입), short(정수타입)
4byte : int (정수타입) , float (실수타입)
8byte : long(정수타입), double(실수타입)

4. 다음 코드에서 타입, 변수 이름, 리터럴에 해당하는 것을 적어 보세요.
답:
타입:  int, double
변수이름: age, price
리터럴: 10, 3.14
// 코드상에 들어가는 값.

 5. 자동 타입 변환에 대한 내용입니다. 컴파일 에러가 발생하는 것은 무엇입니까?
답: 3
 //char type은 65535까지 가능한데 short는 -32,xxx ~32,xxx까지 가능하므로 컴파일 에러.
//자동 변환(Promotion)

6. 강제 타입 변환 (Casting) 에 대한 내용입니다. 컴파일 에러가 발생하는 것은 무엇입니까?
답: 4
//String -> char로 안됨.
// 큰타입을 작은 타입으로 바꾸지 않는 이유 -> garvage 값 때문에.
// 주로 사용할때 실수 => 정수, interface 때

7. 변수를 잘못 초기화한 것은 무엇입니까?
답: 3
// String myStr1 ="";
// String myStr2 =null;

8. 연산식에서의 타입 변환 내용입니다. 컴파일 에러가 생기는 것은 무엇입니까?
답:1
// 자바는 정수 연산일 경우 int 타입을 기본


---------------------------------------------------------------

챕터 3
1. 연산자와 연산식에 대한 설명 중 틀린 것은 무엇입니까?
답:3

2. 다음 코드를 실행했을 때 출력 결과는 무엇입니까?
답: 31


3. 다음 코드를 실행했을 때 출력 결과는 무엇입니까?
답: "가"
//"!" 논리 부정 연산자 - 일반 if문의 true -> false로 나오게 함.

4. 534자루의 연필을 30명의 학생들에게 똑같은 개수로 나누어 줄 때 학생당 몇 개를 가질 수 있고,
최종적으로 몇 개가 남는지를 구하는 코드입니다. ( #1 ) 과 ( #2 )에 들어갈 알맞은 코드를 작성하세요.
답 :
1. pencils / students
2. pencils % students

5. 다음은 십의 자리 이하를 버리는 코드입니다. 변수 value의 값이 356이라면 300이 나올 수 있도록
 ( #1 ) 에 알맞은 코드를 작성하세요(산술 연산자만 사용하세요).
답: value - (value%300)
     // 권장 ()괄호를 통해 우선순위 확인이 쉬울테니...
    //value - value%300

6. 다음 코드는 사다리꼴의 넓이를 구하는 코드입니다.
정확히 소수자릿수가 나올 수 있도록 ( #1 ) 에 알맞은 코드를 작성하세요.
((lengthTop + lengthBottom) * (double)height /2)
// (double)은 변수 중 어디 붙여도 괜찮음.
// 실수로 곱하거나 나누지 않기! Only 정수!

7. 다음 코드는 비교 연산자와 논리 연산자의 복합 연산식입니다.
연산식의 출력 결과를 괄호( ) 속에 넣으세요.
답 : ture, false

8. 다음은 % 연산을 수행한 결과값에 10을 더하는 코드입니다.
NaN 값을 검사해서 올바른 결과가 출력될 수 있도록 ( #1 ) 에 들어갈 NaN을 검사하는 코드를 작성하세요.
답 : Double.isNaN(z) => 0.0으로 나눌 수 없습니다.
//"정수 / 0"하면 오류 , 실수로 나누면 NaN, %하면 Infinity
//double.isNaN(), double.isInfinite(),


---------------------------------------------------------------


---------------------------------------------------------------


챕터 4
1.조건문과 반복문의 종류를 괄호 () 속에 넣어보세요.
답:
조건문 (if)(switch)
반복문 (for)(while)(do-while)

2. 조건문과 반복문을 설명한 것 중 틀린것은 무엇입니까?
답: 2
//  switch에는 실수타입 불가.

3. for문을 이용해서 1부터 100까지 정수 중에서 3의 배수의 총합을 구하는 코드를 작성해 보세요.
답:
    public static void main(String[] args) {
		int sum = 0;
		int i;
		for ( i=3; i<100; i+=3) {
			sum += i;
		}
		System.out.println(sum);
	}

4. while문과 Math.random() 메소드를 이용해서 두 개의 주사위를 던졌을 때 나오는 눈을 (눈1, 눈2) 형태로 출력하고,
 눈의 합이 5가 아니면 계속 주사위를 던지고, 눈의 합이 5이면 실행을 멈추는 코드를 작성해보세요. 눈의 합이 5가 되는 조합은 (1, 4),(4,1),(2,3),(3,2) 입니다.
답:
  public static void main(String[] args) {
      while(true) {
        int n1 = (int)(Math.random()*6) +1;
        int n2 = (int)(Math.random()*6) +1;
        System.out.println("첫번째 :" +n1 + "," + "두번째 :" + n2);
        if (n1 + n2 ==5) {
          break;
        }
      }
    }

5. 중첩 for 문을 이용하여 방정식 4x + 5y = 60의 모든 해를 구해서 (x,y)의 형태로 출력해보세요.
단, x와 y는 10이하의 자연수입니다.
답:
public class Exercise05 {
	public static void main(String[] args) {
		int x;
		int y;

		for (x = 1; x<= 10 ; x++) {
			for (y = 1; y<=10 ; y++) {
				if ((4*x + 5*y) == 60) // x는 4씩 늘어나고 y는 5씩 늘어나게 하고, 그 결과값이 60이 되는 x와 y깁찾기.
					System.out.println("x :"+ x +", y:" + y);

			}
		}

	}
}

6.for문을 이용해서 실행 결과와 같은 삼각형을 출력하는 코드를 작성해보세요.
답:
	public static void main(String[] args) {
		for(int i =1; i<=5; i++) {
			switch(i) {

			  case 1:
				  System.out.println("*");
			  case 2:
				  System.out.println("**");
			  case 3:
				  System.out.println("***");
			  case 4:
				  System.out.println("****");
			   return;
			}

//			for (int j=1; j<=i; j++) {
//				System.out.print("*");// 처음에 println으로 * 1,2,3,4개는 찾았으나... print쓰는 방법을 몰라서 사용하지 못했음...
//			}
//			System.out.println();

 		}
  }
}

7. while문과 Scanner를 이용해서 키보드로부터 입력된 데이터로 예금, 출금, 조회, 종료 기능을 제공하는 코드를 작성해보세요.
이 프로그램을 실행시키면 다음과 같은 실행 결과가 나와야 합니다.
답:

public class Exercise07 {
	public static void main(String[] args) {
		boolean run = true;

		int balance =0;

		Scanner scanner = new Scanner(System.in);
		while(run) {
			System.out.println("----------------");
			System.out.println("1.예금 | 2.출금 | 3.잔고 | 4.종료");
			System.out.println("----------------");
			System.out.println("선택>");

		int selectNum = scanner.nextInt(); // nextInt라는 걸 몰라서 다른 값으로 받으려다가 한참 찾아봄.

//		    switch 활용
//			switch(selectNum) {
//			case 1:
//				System.out.println("예금액>");
//				int in=scanner.nextInt();
//				balance += in;
//				System.out.println();
//				break;
//			case 2:
//				System.out.println("출금액>");
//				int out=scanner.nextInt();
////				break; // 처음 만들었던 형태 => 마이너스 금액..bug 발생 => 0 이하 관련  if 문 하기 추가.
//				if(balance - out <0) {
//					System.out.println("잔액이 부족합니다");
//				} else {
//					balance -= out;
//				}
//				System.out.println();
//				break;
//			case 3:
//				System.out.println("잔고>" + balance);
//				System.out.println();
//				break;
//			case 4:
//				run = false;
//				System.out.println();
//				break;
//			}

//		    if 활용
			if (selectNum == 1) {
				System.out.println("예금액>");
				int in=scanner.nextInt();
				balance += in;
			} else if ( selectNum == 2) {
				System.out.println("출금액>");
				int out=scanner.nextInt();
				if(balance - out <0) {
					System.out.println("잔액이 부족합니다");
				} else {
					balance -= out;
				}
			} else if (selectNum == 3) {
				System.out.println("잔고>" + balance);
			} else {
				break;
			}

		}

		System.out.println("프로그램 종료");
     	scanner.close(); //Resource leak: 'scanner' is never closed 문구보고 추가.
	}
}


---------------------------------------------------------------


챕터 5

1. 참조 타입에 대한 설명으로 틀린 것은 무엇입니까?
답: 4

2. 자바에서 메모리 사용에 대한 설명으로 틀린 것은 무엇입니까?
답:3
* Garbage collector

3. String 타입에 대한 설명으로 틀린 것은 무엇입니까?
답: 2
* equals() 메소드 활용

4. 배열을 생성하는 방법으로 틀린 것은 무엇입니까?
답: 2
* 한줄이라서 무슨 뜻인가 했는데
int [] arry; //선 선언
array = {1,2,3}; // 후 배열 생성. 형태로 이렇게 사용되지 않음.

5. 배열의 기본 초기값에 대한 설명으로 틀린 것은 무엇입니까?
답: 3
* boolean 타입 기본 초기값은 false -> 아마... 0,1 0=false, 1=true 니깐...?

6. 배열의 길이에 대한 문제입니다. array.length의 값과 array[2].length의 값은 얼마입니까?
답:
array.length : 3
array.[2].length : 5
* 다차원 배열 => {}중괄호 묶음 3개, 0번째, 1번째,2번째 // 2번째의 중괄호{}안에 들어있는 값이 5개라서 length -> 5

7. 주어진 배열의 항목에서 최대값을 구해보세요(for문을 이용하세요).
답:
	        for (int i=0; i<array.length; i++) { // length 길이에 맞춰서 5번 돌림
	        	if (array[i]>max) // max 함수 본적이 없었던것 같은데... 웹 도움으로 찾음.
	        		max=array[i];
	        }

8. 주어진 배열의 전체 항목의 합과 평균값을 구해보세요(중첩 for문을 이용하세요).
답:
           int leng = 0;

		        for (int i= 0; i<array.length; ++i) { //행 배열 3번  반복
		        	for (int j= 0; j<array[i].length; j++) { //각 행에 맞는 열에 소속된 배열 개수만큼 반복 // 웹 검색...
		        		sum += array[i][j]; // 1행 1열 ~ 3행 5열까지 합산
		        	}
		        	leng += array[i].length; //
		        }
		        avg =  (double) sum / leng;

9. 다음은 키보드로부터 학생 수와 각 학생들의 점수를 입력받아서, 최고 점수 및 평균 점수를 구하는 프로그램입니다. 실행 결과를 보고, 알맞게 작성해보세요(참고로 16라인에서 Scanner의 nextInt() 메소드는 콘솔에 입력된 숫자를 읽고 리턴합니다).
답:
public static void main(String[] args) {
	        boolean run = true;
	        int studentNum = 0;
	        int[] scores = null;
	        Scanner scanner = new Scanner(System.in);

	        while(run) {
	            System.out.println("-----------------------------------------------------");
	            System.out.println("1.학생수 | 2.점수입력 | 3.점수리스트 | 4.분석 | 5.종료");
	            System.out.println("-----------------------------------------------------");
	            System.out.print("선택> ");

	            int selectNo = scanner.nextInt();

	            if(selectNo == 1) {

	                System.out.print("학생수> ");
	                studentNum = scanner.nextInt();
	                scores = new int[studentNum];

	            } else if(selectNo == 2) {

	                for (int i = 0; i < studentNum; i++) {
	                    System.out.print("scores[" + i + "번째 학생]> ");
	                    scores[i] = scanner.nextInt(); // 학생 배열 순서 마다 점수 기입
	                }

	            } else if(selectNo == 3) {
	                for (int i =0; i<studentNum; i++) {
	                	System.out.println("scores[" + i + "]:" + scores[i]); // 학생 순서 + 기입한 점수
	                }

	            } else if(selectNo == 4) {
	                int max = 0;
	                int sum = 0;
	                double avg = 0.0;
	                for (int i =0; i<studentNum; i++) {
	                	if(scores[i] > max) { //0 보다 큰 모든 값이면 나오고
	                		max = scores[i];  // 배열 중 가장 큰 값을 max로 지정.
	                	}
	                	sum += scores[i]; // 배열에 맞는 점수 합
	                }
	                avg = (double) sum / studentNum; //

	                System.out.println("최고점수 : " + max); //  max 점수 나오도록.
	                System.out.println("평균점수 : " + avg); //  max 점수 나오도록.

	            } else if(selectNo == 5) {
	                run = false;
	            }
	        }

	        System.out.println("프로그램 종료");
          scanner.close();

	    }



---------------------------------------------------------------


챕터 6
1. 객체와 클래스에 대한 설명으로 틀린 것은 무엇입니까?
답:3 //하나의 클래스에서 여러개 인스턴스 만들어봄.

2. 클래스의 구성 멤버가 아닌 것은 무엇입니까?
답 : 4 // 생성자, 필드 , 메소드 순서

3. 필드, 생성자, 메소드에 대한 설명으로 틀린 것은 무엇입니까?
답: 4 // 구성맴버 전부 없을 수도 있고, 몇개만 없을 수도 있음.

4. 필드에 대한 설명으로 틀린 것은 무엇입니까?
답: 3

5. 생성자에 대한 설명으로 틀린 것은 무엇입니까?
답: 1 // 객체 생성을 위해서는 생성자 호출 필수

6. 메소드에 대한 설명으로 틀린 것은 무엇입니까?
답: 4

7. 메소드 오버로딩에 대한 설명으로 틀린 것은 무엇입니까?
답: 2 // 변수 타입, 개수, 순서 3중 하나 이상이 달라야 함.

8. 인스턴스 멤버와 정적 멤버에 대한 설명으로 틀린 것은 무엇입니까?
답: 2 // 객체가 없어도 실행된다는 특징 때문에, 이들 내부에 인스턴스 필드나 인스턴스 메소드를 사용 불가.this도 사용 불가.

9. final 필드와 상수(static final)에 대한 설명으로 틀린 것은 무엇입니까?
답: 2

10. 패키지에 대한 설명으로 틀린 것은 무엇입니까?
답: 4 // class 시작부분에 package 명이 기입되어 있기 때문에 안되는데..  eclipse로 이동시킬 경우, 자동변환(?)을 시켜주는듯...

11. 접근 제한에 대한 설명으로 틀린 것은 무엇입니까?
답:3 // package 내부만 public >protected > default > private

12. 다음 클래스에서 해당 멤버가 필드, 생성자, 메소드 중 어떤 것인지 빈칸을 채우세요.
답:
(1) 필드
(2) 생성자
(3) 메소드

13. 현실 세계의 회원을 Member 클래스로 모델링하려고 합니다. 회원의 데이터로는 이름, 아이디, 패스워드, 나이가 있습니다. 이 데이터들을 가지는 Member 클래스를 선언해보세요.
답 :
  String name;
  String id;
  String password;
  int age;

14. 위에서 작성한 Member 클래스에 생성자를 추가하려고 합니다. 다음과 같이 Member 객체를 생성할 때 name 필드와 id 필드를 외부에서 받은 값으로 초기화하려면 생성자를 어떻게 선언해야 합니까?
답:
Member(String name, String id) {
  this.name = name;
  this.id = id;
}

15. MemberService 클래스에 login() 메소드와 logout() 메소드를 선언하려고 합니다. login() 메소드를 호출할 때에는 매개값으로 id와 password를 제공하고, logout() 메소드는 id만 매개값으로 제공합니다. MemberService 클래스와 login(), logout() 메소드를 선언해보세요.
답:
boolean login (String id, String password) {
		if ("hong".equals(id) && "12345".equals(password)) {
			return true;
		} else {
			return false;
		}
	}
	void logout(String id) {
		System.out.println("로그아웃 되었습니다");
	}

16. PrinterExample 클래스에서 Printer 객체를 생성하고 println() 메소드를 호출해서 매개값을 콘솔에 출력하려고 합니다. println() 메소드의 매개값으로는 int, boolean, double, String 값을 줄 수 있습니다. Printer 클래스에서 println() 메소드를 선언해보세요.
답:
   void println(int x) {
		System.out.println(x);
	}
	 void println(boolean x) {
		System.out.println(x);
	}
	 void println(double x) {
		System.out.println(x);
	}
	 void println(String x) {
		System.out.println(x);
	}

17. 16번 문제에서는 Printer 객체를 생성하고 println() 메소드를 생성했습니다. Printer 객체를 생성하지 않고 PrinterExample 클래스에서 다음과 같이 호출하려면 Printer 클래스를 어떻게 수정하면 될까요?

답:
static void println(int x) {
		System.out.println(x);
	}
	static void println(boolean x) {
		System.out.println(x);
	}
	static void println(double x) {
		System.out.println(x);
	}
	static void println(String x) {
		System.out.println(x);
	}

18. ShopService 객체를 싱글톤으로 만들고 싶습니다. ShopServiceExample 클래스에서 ShopService의 getInstance() 메소드로 싱글톤을 얻을 수 있도록 ShopService 클래스를 작성해보세요.
답 :
public static void main(String[] args) {
		ShopService obj1 = ShopService.getInstance();
		ShopService obj2 = ShopService.getInstance();

		if(obj1 == obj2) {
			System.out.println("같은 ShopService 객체 입니다.");
		} else {
			System.out.println("다른 ShopService 객체 입니다.");
		}
	}


19. 은행 계좌 객체인 Account 객체는 잔고(balance) 필드를 가지고 있습니다. balance 필드는 음수값이 될 수 없고, 최대 백만 원까지만 저장할 수 있습니다. 외부에서 balance 필드를 마음대로 변경하지 못하도록 하고, 0 <= balance <= 1,000,000 범위의 값만 가질 수 있도록 Account 클래스를 작성해보세요.
답 :

static final int MIN_BALANCE = 0;
	static final int MAX_BALANCE = 1000000;

	private int balance =0;

	 void setBalance(int balance) {
		if (balance >=MIN_BALANCE && balance <= MAX_BALANCE) {
			this.balance=balance;
		}
	}
	int getBalance () {
		return this.balance;
	}

20. 다음은 키보드로부터 계좌 정보를 입력받아서, 계좌를 관리하는 프로그램입니다. 실행 결과를 보고, 알맞게 BankApplication 클래스의 메소드를 작성해보세요.

답 :


---------------------------------------------------------------


챕터 7

1. 자바의 상속에 대한 설명 중 틀린 것은 무엇입니까?
답: 1
//다중 상속 안됨.


2. 클래스 타입 변환에 대한 설명 중 틀린 것은 무엇입니까?
답: 2
//항상x  4번이 2번에 대한 이유.

3. final 키워드에 대한 설명으로 틀린 것은?
답 : 1
//final 클래스는 상속불가.

4. 오버라이딩 (Overriding)에 대한 설명으로 틀린 것은?
답: 4
/ protected > default > private  , 쓰거나 재정의 가능.

5. Parent 클래스를 상속해서 Child 클래스를 다음과 같이 작성했는데, Child 클래스의 생성자에서 컴파일 에러가 발생했습니다. 그 이유를 설명해보세요.
답: super();
 //부모를 상속 하는 코드 필요.

6. Parent 클래스를 상속해서 Child 클래스를 다음과 같이 작성했습니다. ChildExample 클래스를 실행했을 때 호출되는 각 클래스의 생성자의 순서를 생각하면서 출력 결과를 작성해보세요.
답:
Parent(String nation) call
Parent() call
Child(String name) call
Child() call
//부모부터 먼저 실행


7. Tire 클래스를 상속 받아 SnowTire 클래스를 다음과 같이 작성했습니다. SnowTireExample 클래스를 실행했을 때 출력 결과는 무엇입니다.

//(Tire tire = new snowTire;)  = (snowTire snowTire = new SnowTire();)

//Casting
//자식에서 override를 했기 때문에 재정의 된 자식 값이 나옴.
// 부모의 내용을 쓰고 싶을 때

8. A,B,C,D,E,F 클래스가 다음과 같이 상속 관계에 있을 때 다음 빈칸에 들어올 수 없는 코드는?

답:
2 // casting 뒤에는 객체만 가능, new 연산자 불가.

---------------------------------------------------------------




챕터 8
1. 인터페이스에 대한 설명으로 틀린것은 무엇입니까?
답: 3
// final 필드.

2. 인터페이스의 다형성에 대한 설명으로 틀린 것은 무엇입니까?
답: 4
// 구현 객체를 인터페이스 타입으로 변환 시 자동 타입 변환이 된다.

3.다음은 Soundable 인터페이스입니다. sound() 추상 메소드는 객체의 소리를 리턴합니다.
SoundableExample 클래스에서 printSound() 메소드는 Soundable 인터페이스 타입의 매개변수를 가지고 있습니다.
main() 메소드에서 printSound()를 호출할 때 Cat과 Dog 객체를 주고 실행하면
 각각 "야옹"과 "멍멍"이 출력되도록 Cat과 Dog 클래스를 작성해보세요.
 답:

 public class Cat implements Soundable {

	@Override
	public String sound() {
		String catSound = "야옹";
		return catSound;
	}

}

public class Dog implements Soundable {

	@Override
	public String sound() {
		String dogSound = "멍멍";
		return dogSound;
	}

}

4. DaoExample 클래스의 main() 메소드에서 dbWork() 메소드를 호출할 때
OracleDao와 MySqlDao 객체를 매개값으로 주고 호출했습니다.
dbWork() 메소드는 두 객체를 모두 매개값으로 받기 위해 DataAccessObject 타입의
 매개 변수를 가지고 있습니다. 실행 결과를 보고 DataAccessObject 인터페이스와
  OracleDao, MySqlDao 구현 클래스를 각각 작성해보세요.
//Dao Database라는 서버
답:
package sec7;

public class OracleDao implements DataAccessObject {

    @Override
    public void select() {
        System.out.println("Oracle DB에서 검색");
    }

    @Override
    public void insert() {
        System.out.println("Oracle DB에서 삽입");
    }

    @Override
    public void update() {
        System.out.println("Oracle DB에서 수정");
    }

    @Override
    public void delete() {
        System.out.println("Oracle DB에서 삭제");
    }
}

public class MySqlDao implements DataAccessObject {

    @Override
    public void select() {
        System.out.println("MySql DB에서 검색");
    }

    @Override
    public void insert() {
        System.out.println("MySql DB에서 삽입");
    }

    @Override
    public void update() {
        System.out.println("MySql DB에서 수정");
    }

    @Override
    public void delete() {
        System.out.println("MySql DB에서 삭제");
    }
}


5. 다음은 Action 인터페이스입니다. work() 추상 메소드는 객체의 작업을 시작시킵니다.
ActionExample 클래스의 main() 메소드에서 Action의 익명 구현 객체를 만들어
다음과 같은 실행 결과가 나올 수 있도록 박스 안에 들어갈 코드를 작성해보세요.

답:

public static void main(String[] args) {
        Action action = new Action() {

            @Override
            public void work() {
                System.out.println("복사를 합니다.");
            }
        };
        action.work();
    }

=======
7. Tire 클래스를 상속 받아 SnowTire 클래스를 다음과 같이 작성했습니다. SnowTireExample 클래스를 실행했을 때 출력 결과는 무엇입니다.
